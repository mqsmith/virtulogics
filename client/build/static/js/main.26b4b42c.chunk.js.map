{"version":3,"sources":["containers/Collection.js","containers/Home.js","containers/Single.js","containers/NewCar.js","containers/EditCar.js","App.js","serviceWorker.js","index.js"],"names":["Collection","state","cars","getCars","axios","get","then","console","log","setState","data","catch","err","this","map","car","i","key","_id","model","color","year","to","Component","Home","Single","getCarById","props","match","params","id","className","NewCar","imageURL","handleChange","event","value","target","name","handleFormSubmit","preventDefault","post","response","error","alert","message","history","push","type","placeholder","onChange","onClick","EditCar","handleInputChange","handleSubmit","put","htmlFor","App","path","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.26b4b42c.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\n\nclass Collection extends Component {\n  state = {\n    cars: []\n  };\n\n  componentDidMount() {\n    this.getCars();\n  }\n\n  getCars = () => {\n    axios\n      .get(\"/api/cars\")\n      .then(cars => {\n        console.log(cars);\n        this.setState({ cars: cars.data.data });\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n  render() {\n    return (\n      <div>\n        <h1>Collection of Teslas</h1>\n        {this.state.cars.map((car, i) => (\n          <div key={car._id}>\n            <p>Model: {car.model}</p>\n            <p>Color: {car.color}</p>\n            <p>Year: {car.year}</p>\n            <p>ID: {car._id}</p>\n            <Link to={\"/collection/\" + car._id}>Link</Link>\n          </div>\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default Collection;\n","import React, { Component } from 'react';\nimport {Link} from 'react-router-dom';\n\nclass Home extends Component {\n    render() {\n        return (\n            <div>\n                <h1>This is my homepage.</h1>\n                <Link to=\"/collection\" >View My Teslas</Link>\n            </div>\n        );\n    }\n}\n\nexport default Home;","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport {Link} from \"react-router-dom\";\n\nclass Single extends Component {\n  state = {\n    model: \"\",\n    color: \"\",\n    year: \"\",\n    _id: \"\"\n  };\n\n  componentDidMount() {\n    this.getCarById();\n  }\n\n  getCarById = () => {\n    axios\n      .get(\"/api/cars/\" + this.props.match.params.id)\n      .then(car => {\n        console.log(car);\n        this.setState({ \n            model: car.data.data.model,\n            color: car.data.data.color,\n            year: car.data.data.year,\n            _id: car.data.data._id\n         });\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n  render() {\n    return (\n      <div>\n        <h1>This is a single tesla</h1>\n        <p>Model: {this.state.model}</p>\n        <p>Color: {this.state.color}</p>\n        <p>Year: {this.state.year}</p>\n        <p>ID: {this.state._id}</p>\n        <div className=\"row\">\n            <div className=\"col\">\n                <Link to=\"/collection\"><button>Go back to collection</button></Link>\n            </div>\n            <div className=\"col\">\n                <Link to={\"/edit/\" + this.state._id}><button>Edit</button></Link> \n            </div>\n            <div className=\"col\">\n                <Link to=\"/\"><button>Go Home</button></Link>\n            </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Single;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nclass NewCar extends Component {\n  state = {\n    model: \"\",\n    color: \"\",\n    year: \"\",\n    imageURL: \"\"\n  };\n\n  handleChange = event => {\n    let value = event.target.value;\n    let name = event.target.name;\n\n    this.setState({\n      [name]: value\n    });\n  };\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n    // console.log(this.state);\n    axios\n      .post(\"/api/new\", this.state)\n      .then(response => {\n        console.log(response);\n        if(response.data.error){\n          alert(\"Failed to create\" + response.data.message);\n        }else{\n          this.props.history.push('/collection/' + response.data.data._id);\n        } \n      })\n      .catch(err => {\n        console.log(err);\n        alert(\"Failed to create: \" + err.message);\n      });\n  };\n\n  render() {\n    return (\n      <div>\n        <h1>This is my new car container</h1>\n        <form>\n          <div className=\"form-group\">\n            <input\n              type=\"text\"\n              placeholder=\"Model\"\n              onChange={this.handleChange}\n              name=\"model\"\n              value={this.state.model}\n            />\n          </div>\n          <div className=\"form-group\">\n            <input\n              type=\"text\"\n              placeholder=\"Color\"\n              onChange={this.handleChange}\n              name=\"color\"\n              value={this.state.color}\n            />\n          </div>\n          <div className=\"form-group\">\n            <input\n              type=\"number\"\n              placeholder=\"Year\"\n              onChange={this.handleChange}\n              name=\"year\"\n              value={this.state.year}\n            />\n          </div>\n          <div className=\"form-group\">\n            <input\n              type=\"text\"\n              placeholder=\"Image URL\"\n              onChange={this.handleChange}\n              name=\"imageURL\"\n              value={this.state.imageURL}\n            />\n          </div>\n          <div className=\"form-group\">\n            <button\n              type=\"submit\"\n              className=\"btn btn-primary\"\n              onClick={this.handleFormSubmit}\n            >\n              Submit\n            </button>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default NewCar;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nclass EditCar extends Component {\n  state = {\n    model: \"\",\n    color: \"\",\n    year: \"\",\n    imageURL: \"\",\n    _id: \"\"\n  };\n\n  componentDidMount() {\n    console.log(this.props.match.params.id);\n    this.getCarById();\n  }\n\n  getCarById = () => {\n    axios\n      .get(\"/api/cars/\" + this.props.match.params.id)\n      .then(car => {\n        console.log(car);\n        this.setState({\n          model: car.data.data.model,\n          color: car.data.data.color,\n          year: car.data.data.year,\n          imageURL: car.data.data.imageURL,\n          _id: car.data.data._id\n        });\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  handleInputChange = event => {\n    //   const name = event.target.name;\n    //   const value = event.target.value;\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    axios\n      .put(\"/api/car\", this.state)\n      .then(response => {\n        console.log(response);\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  render() {\n    return (\n      <div className=\"row\">\n        <h1>This is the edit page</h1>\n        <div className=\"col-sm-3\"></div>\n        <div className=\"col-sm-6\">\n          <form>\n            <div className=\"form-group\">\n              <label htmlFor=\"model\">Tesla Model</label>\n              <input\n                className=\"form-control\"\n                type=\"text\"\n                name=\"model\"\n                placeholder=\"Model\"\n                value={this.state.model}\n                onChange={this.handleInputChange}\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"color\">Tesla Color</label>\n              <input\n                className=\"form-control\"\n                type=\"text\"\n                name=\"color\"\n                placeholder=\"Color\"\n                value={this.state.color}\n                onChange={this.handleInputChange}\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"year\">Tesla Year</label>\n              <input\n                className=\"form-control\"\n                type=\"number\"\n                name=\"year\"\n                placeholder=\"Year\"\n                value={this.state.year}\n                onChange={this.handleInputChange}\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"imageURL\">Tesla Image URL</label>\n              <input\n                className=\"form-control\"\n                type=\"text\"\n                name=\"imageURL\"\n                placeholder=\"Image URL\"\n                value={this.state.imageURL}\n                onChange={this.handleInputChange}\n              />\n            </div>\n            <div className=\"form-group\">\n              <button className=\"btn btn-primary\" onClick={this.handleSubmit}>\n                Submit Changes\n              </button>\n            </div>\n          </form>\n        </div>\n        <div className=\"col-sm-3\"></div>\n      </div>\n    );\n  }\n}\n\nexport default EditCar;\n","import React from \"react\";\nimport Collection from \"./containers/Collection\";\nimport Home from \"./containers/Home\";\nimport Single from \"./containers/Single\";\nimport NewCar from \"./containers/NewCar\";\nimport EditCar from './containers/EditCar';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/new-car\" component={NewCar} />\n        <Route path=\"/edit/:id\" component={EditCar}/>\n        <Route path=\"/collection/:id\" component={Single} />\n        <Route path=\"/collection\" component={Collection} />\n        <Route path=\"/\" component={Home} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}