{"version":3,"sources":["actions/alert.js","actions/types.js","utils/setAuthToken.js","actions/auth.js","components/Nav/Navbar.js","components/auth/Register.js","components/auth/Login.js","components/layout/Alert.js","components/layout/NotFound.js","components/routing/Routes.js","components/SideBarNarrow/SideBarNarrow.js","components/SideBarWide/SideBarWide.js","components/Sidebar/Sidebar.jsx","components/routing/PrivateRoute.js","containers/Home/Home.js","components/Loading/Loading.js","components/HostCardView/HostCard.js","components/HostListView/HostList.js","containers/Hosts/Hosts.js","components/Pie/Pie.js","components/LineChart/ClusterLineChart.js","components/ClusterChart/ClusterChartContainer.js","containers/Clusters/Clusters.js","components/LineChart/LineMemChart.js","components/LineChart/LineCpuChart.js","components/HostChart/HostChartContainer.js","containers/Host/Host.js","containers/NewConfig/NewConfig.js","reducers/alert.js","reducers/auth.js","reducers/index.js","store.js","App.js","serviceWorker.js","index.js"],"names":["setAlert","msg","alertType","timeout","dispatch","id","uuid","v4","type","payload","setTimeout","setAuthToken","token","axios","defaults","headers","common","loadUser","a","localStorage","get","res","data","connect","state","auth","logout","isAuthenticated","loading","authLinks","onClick","href","className","guestLinks","to","register","name","email","password","config","body","JSON","stringify","post","errors","response","forEach","error","useState","password2","formData","setFormData","onChange","e","target","value","onSubmit","preventDefault","placeholder","login","required","minLength","alerts","alert","length","map","key","NotFound","Routes","path","component","Register","Login","SideBarNarrow","props","naveopen","navHandler","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","x1","y1","x2","y2","SideBarWide","aria-hidden","d","points","Sidebar","navOpen","this","setState","Component","rest","render","newImage","color","jumbotron","backgroundImage","fontSize","backgroundPosition","backgroundSize","backgroundRepeat","mainButton","backgroundColor","margin","borderColor","mainButtonText","containerMarketing","featureText","padding","highlightText","featureButton","planList","listStyleType","signUpButton","pricingColumn","textAlign","display","priceImg","paddingRight","Home","style","role","data-src","alt","src","data-holder-rendered","Loading","HostCard","hostData","host","i","esxhostname","vcenter","clustername","usage_average","text","styles","background","transform","transformOrigin","filter","root","trail","fontWeight","animation","totalCapacity_average","toFixed","cpu_usage_average","ready_summation","costop_summation","moment","time","format","HostList","view","cardHandler","renderTableData","listHandler","checked","Hosts","allData","listView","getBoth","then","obj","array","Object","values","catch","err","console","log","Chart","global","defaultFontFamily","PieComponent","chartRef","React","createRef","myChart","current","labels","label","datasets","hoverBackgroundColor","options","barPercentage","legend","title","ref","ClusterLineChart","maintainAspectRatio","scales","xAxes","position","hostOneData","hostOneLabels","xAxisID","hostTwoData","hostTwoLabels","ClusterChartContainer","hostOneCpuData","hostOneMemData","hostTwoCpuData","hostTwoMemData","getMem","hostMemData","memUsageOne","memUsageTwo","intervalID","bind","getCpu","hostCpuData","cpuUsageOne","cpuUsageTwo","hostName","hostNameOne","hostNameTwo","formattedTime","Clusters","alldata","totalmemoryusage","singlevcentername","singleclustername","showhostchart","undefined","n1cpu","n1mem","nPLus","combined","push","memData","memTotal","cpuData","cputotal","cpuReady","readyTotal","f","cpureadytotal","costopData","cototal","costoptotal","labelData","clusterName","Set","vcenterName","totalclustermemory","cpuUsage","usagemhz_average","clusterCpuTotal","cpuUsagePer","clusterusagetotal","g","clustercputotal","content","Pie","LineChart","hostLabels","yAxes","ticks","min","pointRadius","borderWidth","lineTension","HostChartContainer","hostCpuLabels","hostCPUData","getSevenDayMem","getSevenDayCpu","LineMemChart","LineCpuChart","Host","match","params","NewConfig","hostMem","handleChange","event","handleFormSubmit","message","htmlFor","initialState","getItem","user","combineReducers","action","setItem","removeItem","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","useEffect","exact","Boolean","window","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.de61c241.chunk.js","sourcesContent":["// Import Links\nimport uuid from 'uuid';\nimport { SET_ALERT, REMOVE_ALERT } from './types';\n\n// Export Logic\nexport const setAlert = (msg, alertType, timeout = 5000) => dispatch => {\n  const id = uuid.v4();\n  dispatch({\n    type: SET_ALERT,\n    payload: { msg, alertType, id }\n  });\n\n  setTimeout(() => dispatch({ type: REMOVE_ALERT, payload: id }), timeout);\n};\n","// Export Variables\nexport const SET_ALERT = 'SET_ALERT';\nexport const REMOVE_ALERT = 'REMOVE_ALERT';\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\nexport const REGISTER_FAIL = 'REGISTER_FAIL';\nexport const USER_LOADED = 'USER_LOADED';\nexport const AUTH_ERROR = 'AUTH_ERROR';\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\nexport const LOGOUT = 'LOGOUT';\nexport const GET_PROFILE = 'GET_PROFILE';\nexport const GET_PROFILES = 'GET_PROFILES';\nexport const GET_REPOS = 'GET_REPOS';\nexport const UPDATE_PROFILE = 'UPDATE_PROFILE';\nexport const CLEAR_PROFILE = 'CLEAR_PROFILE';\nexport const PROFILE_ERROR = 'PROFILE_ERROR';\nexport const ACCOUNT_DELETED = 'ACCOUNT_DELETED';\nexport const GET_POSTS = 'GET_POSTS';\nexport const GET_POST = 'GET_POST';\nexport const POST_ERROR = 'POST_ERROR';\nexport const UPDATE_LIKES = 'UPDATE_LIKES';\nexport const DELETE_POST = 'DELETE_POST';\nexport const ADD_POST = 'ADD_POST';\nexport const ADD_COMMENT = 'ADD_COMMENT';\nexport const REMOVE_COMMENT = 'REMOVE_COMMENT';\n","import axios from 'axios';\n\nconst setAuthToken = token => {\n  if (token) {\n    axios.defaults.headers.common['x-auth-token'] = token;\n  } else {\n    delete axios.defaults.headers.common['x-auth-token'];\n  }\n};\n\nexport default setAuthToken;\n","// Import Links\nimport axios from 'axios';\nimport { setAlert } from './alert';\nimport {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  USER_LOADED,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n  CLEAR_PROFILE\n} from './types';\nimport setAuthToken from '../utils/setAuthToken';\n\n// Export for Load User\nexport const loadUser = () => async dispatch => {\n  if (localStorage.token) {\n    setAuthToken(localStorage.token);\n  }\n\n  try {\n    const res = await axios.get('/api/auth');\n\n    dispatch({\n      type: USER_LOADED,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: AUTH_ERROR\n    });\n  }\n};\n\n// Export for Register User\nexport const register = ({ name, email, password }) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  const body = JSON.stringify({ name, email, password });\n\n  try {\n    const res = await axios.post('/api/users', body, config);\n\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: res.data\n    });\n\n    dispatch(loadUser());\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: REGISTER_FAIL\n    });\n  }\n};\n\n// Export for Login User\nexport const login = (email, password) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  const body = JSON.stringify({ email, password });\n\n  try {\n    const res = await axios.post('/api/auth', body, config);\n\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data\n    });\n\n    dispatch(loadUser());\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: LOGIN_FAIL\n    });\n  }\n};\n\n// Expoer for Logout / Clear Profile\nexport const logout = () => dispatch => {\n  dispatch({ type: CLEAR_PROFILE });\n  dispatch({ type: LOGOUT });\n};","// Import Links\nimport React, { Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { logout } from '../../actions/auth';\nimport './Navbar.css';\n\n// Navbar Variables\nconst Navbar = ({ auth: { isAuthenticated, loading }, logout }) => {\n  const authLinks = (\n    <ul>\n      <li>\n        <a onClick={logout} href='/'>\n          <i className='fas fa-sign-out-alt' />{' '}\n          <span className='hide-sm'>Logout</span>\n        </a>\n      </li>\n    </ul>\n  );\n\n  const guestLinks = (\n    <ul>\n      <li>\n        <Link to='/register'>Register</Link>\n      </li>\n      <li>\n        <Link to='/login'>Login</Link>\n      </li>\n    </ul>\n  );\n\n  return (\n    <nav className='navbar nav-header justify-content-end'>\n      \n      {!loading && (\n        <Fragment>{isAuthenticated ? authLinks : guestLinks}</Fragment>\n      )}\n    </nav>\n  );\n};\n\nNavbar.propTypes = {\n  logout: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\n// Export Link\nexport default connect(\n  mapStateToProps,\n  { logout }\n)(Navbar);","// Import Links\nimport React, { Fragment, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Link, Redirect } from 'react-router-dom';\nimport { setAlert } from '../../actions/alert';\nimport { register } from '../../actions/auth';\nimport PropTypes from 'prop-types';\n\n// Register Variables\nconst Register = ({ setAlert, register, isAuthenticated }) => {\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    password: '',\n    password2: ''\n  });\n\n  const { name, email, password, password2 } = formData;\n\n  const onChange = e =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = async e => {\n    e.preventDefault();\n    if (password !== password2) {\n      setAlert('Passwords do not match', 'danger');\n    } else {\n      register({ name, email, password });\n    }\n  };\n\n  // Redirect Route\n  if (isAuthenticated) {\n    return <Redirect to='/clusters' />;\n  }\n\n  // Styling Register Component with Bootstrap classNames\n  return (\n    <Fragment>\n    <div className=\"auth-container\">\n    <div className=\"card\">\n      <p className='lead'>\n        <i className='fas fa-user' /> Create Your Account\n      </p>\n      <form className='form' onSubmit={e => onSubmit(e)}>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='Name'\n            name='name'\n            value={name}\n            onChange={e => onChange(e)}\n          />\n        </div>\n        <div className='form-group'>\n          <input\n            type='email'\n            placeholder='Email Address'\n            name='email'\n            value={email}\n            onChange={e => onChange(e)}\n          />\n          \n        </div>\n        <div className='form-group'>\n          <input\n            type='password'\n            placeholder='Password'\n            name='password'\n            value={password}\n            onChange={e => onChange(e)}\n          />\n        </div>\n        <div className='form-group'>\n          <input\n            type='password'\n            placeholder='Confirm Password'\n            name='password2'\n            value={password2}\n            onChange={e => onChange(e)}\n          />\n        </div>\n        <input type='submit' className='btn btn-dark' value='Register' />\n      </form>\n      <p className='my-1'>\n        Already have an account? <Link to='/login'>Sign In</Link>\n      </p>\n      </div>\n      </div>\n    </Fragment>\n  );\n};\n\nRegister.propTypes = {\n  setAlert: PropTypes.func.isRequired,\n  register: PropTypes.func.isRequired,\n  isAuthenticated: PropTypes.bool\n};\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated\n});\n\n// Export Links\nexport default connect(\n  mapStateToProps,\n  { setAlert, register }\n)(Register);\n","// Import Links\nimport React, { Fragment, useState } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { login } from '../../actions/auth';\nimport \"./auth.css\";\n\n\n// Variables for Login\nconst Login = ({ login, isAuthenticated }) => {\n  const [formData, setFormData] = useState({\n    email: '',\n    password: ''\n  });\n\n  const { email, password } = formData;\n\n  const onChange = e =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = async e => {\n    e.preventDefault();\n    login(email, password);\n  };\n\n  // Redirect Route\n  if (isAuthenticated) {\n    return <Redirect to='/clusters' />;\n  }\n\n  // Styling Login Component with Bootstrap classNames\n  return (\n    <Fragment>\n      <div className=\"auth-container\">\n      <div className=\"card\">\n      <p className='lead'>\n        <i className='fas fa-user' /> Sign Into Your Account\n      </p>\n      <form className='form' onSubmit={e => onSubmit(e)}>\n        <div className='form-group'>\n          <input\n            type='email'\n            placeholder='Email Address'\n            name='email'\n            value={email}\n            onChange={e => onChange(e)}\n            required\n          />\n        </div>\n        <div className='form-group'>\n          <input\n            type='password'\n            placeholder='Password'\n            name='password'\n            value={password}\n            onChange={e => onChange(e)}\n            minLength='6'\n          />\n        </div>\n        <input type='submit' className='btn btn-dark' value='Login' />\n      </form>\n      <p className='my-1 dark'>\n        Don't have an account? <Link to='/register'>Sign Up</Link>\n      </p>\n      </div>\n      </div>\n    </Fragment>\n  );\n};\n\nLogin.propTypes = {\n  login: PropTypes.func.isRequired,\n  isAuthenticated: PropTypes.bool\n};\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated\n});\n\n// Export Links\nexport default connect(\n  mapStateToProps,\n  { login }\n)(Login);\n","// Import Links\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\n// Layout Variables\nconst Alert = ({ alerts }) =>\n  alerts !== null &&\n  alerts.length > 0 &&\n  alerts.map(alert => (\n    <div key={alert.id} className={`alert alert-${alert.alertType}`}>\n      {alert.msg}\n    </div>\n  ));\n\nAlert.propTypes = {\n  alerts: PropTypes.array.isRequired\n};\n\nconst mapStateToProps = state => ({\n  alerts: state.alert\n});\n\n// Export Link\nexport default connect(mapStateToProps)(Alert);","// Import Links\nimport React from 'react';\nimport \"./NotFound.css\"\n\nconst NotFound = () => {\n  return (\n    <div className=\"container notFound\">\n    <h1 className='x-large text-warning'>\n        <i className='fas fa-exclamation-triangle' /> Page Not Found\n      </h1>\n      <p className='large'>Sorry, this page does not exist</p>\n    </div>\n     \n  );\n};\n\n// Export Link\nexport default NotFound;","// Import Links\nimport React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Register from '../auth/Register';\nimport Login from '../auth/Login';\nimport Alert from '../layout/Alert';\nimport NotFound from '../layout/NotFound';\n\nconst Routes = () => {\n  // Route to handle Register and Login Routes\n  return (\n    <section className='container'>\n      <Alert />\n      <Switch>\n        <Route path='/register' component={Register} />\n        <Route path='/login' component={Login} />\n        <Route path='/*' component={NotFound} />\n      </Switch>\n    </section>\n  );\n};\n\n// Export Link\nexport default Routes;","import React from \"react\";\nimport \"./SideBarNarrow.css\"\n\nconst SideBarNarrow = props => {\n  return (\n    <div className=\"sideBarNarrow  animated fadeInDown\">\n      <button\n        type=\"button\"\n        className=\"btn btn-dark\"\n        naveopen={props.naveopen}\n        onClick={props.navHandler}\n      >\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"24\"\n          height=\"24\"\n          viewBox=\"0 0 24 24\"\n          fill=\"none\"\n          stroke=\"currentColor\"\n          strokeWidth=\"2\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          className=\"feather feather-menu\"\n        >\n          <line x1=\"3\" y1=\"12\" x2=\"21\" y2=\"12\" />\n          <line x1=\"3\" y1=\"6\" x2=\"21\" y2=\"6\" />\n          <line x1=\"3\" y1=\"18\" x2=\"21\" y2=\"18\" />\n        </svg>\n      </button>\n    </div>\n  );\n};\n\nexport default SideBarNarrow;\n","import React from \"react\";\nimport \"./SideBarWide.css\";\n\nconst SideBarWide = props => {\n  return (\n    <div className=\"row\">\n      <nav className=\"col-md-2 d-md-block sidebar animated fadeInLeft\">\n        <div className=\"sidebar-sticky\">\n          <br></br>\n          <ul className=\"nav flex-column\">\n          <div className=\"text-right animated fadeInRight delay-1s\">\n              <div\n       \n                className=\"toggle-x\"\n                onClick={props.navHandler}\n              >\n             <i className=\"fa fa-window-close\" aria-hidden=\"true\"></i>\n              </div>\n            </div>\n\n            <li className=\"nav-item animated fadeInRight delay-1s\">\n              <a className=\"nav-link active\" href=\"/clusters\">\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  width=\"24\"\n                  height=\"24\"\n                  viewBox=\"0 0 24 24\"\n                  fill=\"none\"\n                  stroke=\"currentColor\"\n                  strokeWidth=\"2\"\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  className=\"feather feather-home\"\n                >\n                  <path d=\"M3 9l9-7 9 7v11a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z\"></path>\n                  <polyline points=\"9 22 9 12 15 12 15 22\"></polyline>\n                </svg>\n                Cluster Overview <span className=\"sr-only\">(current)</span>\n              </a>\n            </li>\n            <li className=\"nav-item animated fadeInRight delay-1s\">\n              <a className=\"nav-link active\" href=\"/hosts\">\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  width=\"24\"\n                  height=\"24\"\n                  viewBox=\"0 0 24 24\"\n                  fill=\"none\"\n                  stroke=\"currentColor\"\n                  strokeWidth=\"2\"\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  className=\"feather feather-layers\"\n                >\n                  <polygon points=\"12 2 2 7 12 12 22 7 12 2\"></polygon>\n                  <polyline points=\"2 17 12 22 22 17\"></polyline>\n                  <polyline points=\"2 12 12 17 22 12\"></polyline>\n                </svg>\n                Hosts View\n              </a>\n            </li>\n          </ul>\n        </div>\n      </nav>\n    </div>\n  );\n};\n\nexport default SideBarWide;\n","// Import Links\nimport React, { Component } from \"react\";\nimport SidebarNarrow from \"../SideBarNarrow/SideBarNarrow\";\nimport SideBarWide from \"../SideBarWide/SideBarWide\";\n\n// Sidebar Component\nclass Sidebar extends Component {\n  state = {\n    navOpen: false\n  };\n\n  render() {\n    return (\n      <>\n      {this.state.navOpen ? (<SideBarWide navOpen={this.state.navOpen} navHandler={() => {\n                  this.setState({ navOpen: false });\n                }}/>) : (<SidebarNarrow navOpen={this.state.navOpen} navHandler={() => {\n                  this.setState({ navOpen: true });\n                }}/>\n        \n    )}\n    </>\n    )\n  }\n}\n\n// Export Link\nexport default Sidebar;\n","// Import Links\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\n// Handling PrivateRoute Logic to Redirect\nconst PrivateRoute = ({\n  component: Component,\n  auth: { isAuthenticated, loading },\n  ...rest\n}) => (\n  <Route\n    {...rest}\n    render={props =>\n      !isAuthenticated && !loading ? (\n        <Redirect to='/login' />\n      ) : (\n        <Component {...props} />\n      )\n    }\n  />\n);\n\nPrivateRoute.propTypes = {\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\n// Export Link\nexport default connect(mapStateToProps)(PrivateRoute);","// Import Links\nimport React, { Component } from 'react';\n\n// Styling Variables\nconst newImage = {\n  color: 'white'\n};\n\nconst jumbotron = {\n  backgroundImage: 'url(\"https://images.unsplash.com/photo-1558494949-ef010cbdcc31?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1791&q=80\")',\n  color: 'white',\n  height: '500px',\n  fontSize: '80px',\n  backgroundPosition: 'center',\n  backgroundSize: 'cover',\n  backgroundRepeat: 'no-repeat',\n};\n\nconst mainButton = {\n  backgroundColor: '#aacbd1',\n  fontSize: '20px',\n  width: '150px',\n  margin: '35px',\n  borderColor: 'black'\n};\n\nconst mainButtonText = {\n  color: '#3f5770'\n};\n\nconst containerMarketing = {\n  backgroundColor: 'white'\n};\n\nconst featureText = {\n  padding: '55px'\n};\n\nconst highlightText = {\n  color: '#ff5235',\n};\n\nconst featureButton = {\n  backgroundColor: '#aacbd1',\n  color: '#3f5770'\n};\n\nconst planList = {\n  listStyleType: 'none'\n};\n\n\nconst signUpButton = {\n  backgroundColor: '#aacbd1',\n  color: '#3f5770'\n};\n\nconst pricingColumn = {\n  textAlign: 'center',\n  display: 'inline-block',\n};\n\nconst priceImg = {\npaddingRight: '45px'\n};\n\n// Styling Home Component with Bootstrap classNames\nclass Home extends Component {\n  render() {\n    return (\n\n      <div className=\"container\">\n\n        <div className=\"jumbotron\" style={jumbotron}>\n          <h1>Virtulogics</h1>\n          <p>Simple, Seamless Capacity Planning</p>\n          <p><button className=\"btn btn-primary btn-lg\" style={mainButton}><a href=\"/register\" style={mainButtonText}>Try it Free</a></button></p>\n        </div>\n        <div className=\"container marketing\" style={containerMarketing}>\n          <div className=\"row featurette\" style={featureText}>\n            <div className=\"col-md-7\" >\n              <h2 className=\"featurette-heading\">Smart Capacity Planning     <br></br><span style={highlightText}>It'll blow your mind.</span></h2>\n              <p className=\"lead\">Easily and Quickly know when its time to add memory or additional hosts. </p>\n              <br />\n              <p className=\"lead\"> Data is displayed in a clear and concise way where you can easy get an overview of your current load. Exactly what you need. </p>\n              <br />\n              <p className=\"lead\">Easily customize each of your graphs or extend the time frame visible. </p>\n              <br />\n              <p><a className=\"btn btn-secondary\" href=\"/register\" role=\"button\" style={featureButton}>Try for Free</a></p>\n            </div>\n            <div className=\"col-md-5\">\n              <img className=\"featurette-image img-fluid mx-auto\" data-src=\"holder.js/500x500/auto\" alt=\"500x500\" style={newImage} src=\"/img/data.png\" data-holder-rendered=\"true\" />\n            </div>\n          </div>\n\n          <hr></hr>\n\n          <div className=\"row featurette\" style={featureText}>\n            <div className=\"col-md-5 pull-md-7\">\n              <img className=\"featurette-image img-fluid mx-auto\" data-src=\"holder.js/500x500/auto\" alt=\"500x500\" src=\"/img/dashboard.png\" data-holder-rendered=\"true\" style={newImage} />\n            </div>\n            <div className=\"col-md-7 push-md-5\">\n              <h2 className=\"featurette-heading\">Clean, Easy to Read Dashboard </h2> <h2><span style={highlightText}>Check it out for yourself.</span></h2>\n              <p className=\"lead\">Our easy to read dashboard doesn't require weeks of training. We pride ourselves on providing clear, simple data.</p>\n              <br />\n              <p className=\"lead\">Data is displayed in a clear and concise way where you can easy get an overview of your current load. Exactly what you need. </p>\n              <br />\n              <p><a className=\"btn btn-secondary\" href=\"/register\" role=\"button\" style={featureButton}>Try for Free</a></p>\n            </div>\n\n          </div>\n\n          <hr></hr>\n\n          <div className=\"row featurette\" style={featureText}>\n            <div className=\"col-md-7\">\n              <h2 className=\"featurette-heading\">Practical Pricing.  <span style={highlightText}>No Headaches.</span></h2>\n              <br></br>\n              <p className=\"lead\">We don't like to play games when it comes your money. </p>\n              <p className=\"lead\">Our clear and simple pricing structure keeps you focused on what really matters and headache-free!</p>\n              <p className=\"lead\">Flat Monthly rates with no caps on the number of users in your account</p>\n              <p className=\"lead\">Robust referal program makes it even easier to save!</p>\n              <br />\n              <p><a className=\"btn btn-secondary\" href=\"/register\" role=\"button\" style={featureButton}>Try for Free</a></p>\n\n            </div>\n            <div className=\"col-md-5\">\n              <img className=\"featurette-image img-fluid mx-auto\" data-src=\"holder.js/500x500/auto\" alt=\"500x500\" src=\"/img/graphs.png\" data-holder-rendered=\"true\" style={newImage} />\n            </div>\n\n          </div>\n\n          <hr></hr>\n\n          <div className=\"row\">\n            <div className=\"col-lg-4\" style={pricingColumn}>\n              <img className=\"rounded-circle\" src=\"https://image.flaticon.com/icons/svg/179/179250.svg\" alt=\"Generic placeholder 1\" width=\"140\" height=\"140\" style={priceImg}/>\n              <h2>Bronze Plan</h2>\n              <ul style={planList}>\n                <li>Capacity Planner Dashboard</li>\n                <li>Ability to add up to 2 clusters</li>\n                <li>2 Users</li>\n                <li>Load Alert Notifications </li>\n              </ul>\n              <p><a className=\"btn btn-secondary\" href=\"/register\" role=\"button\" style={signUpButton}>Sign Up »</a></p>\n            </div>\n            <div className=\"col-lg-4\" style={pricingColumn}>\n              <img className=\"rounded-circle\" src=\"https://image.flaticon.com/icons/svg/179/179251.svg\" alt=\"Generic placeholder 2\" width=\"140\" height=\"140\" style={priceImg}/>\n              <div >\n                <h2 >Silver Plan</h2>\n                <ul style={planList}>\n                  <li>Everything in the Bronze Plan</li>\n                  <li>Ability to add up to 5 clusters</li>\n                  <li>5 Users</li>\n                  <li>Smart Load Balance</li>\n                </ul>\n                <p><a className=\"btn btn-secondary\" href=\"/register\" role=\"button\" style={signUpButton}>Sign Up »</a></p>\n              </div>\n            </div>\n            <div className=\"col-lg-4\" style={pricingColumn}>\n              <img className=\"rounded-circle\" src=\"https://image.flaticon.com/icons/svg/179/179249.svg\" alt=\"Generic placeholder 3\" width=\"140\" height=\"140\" style={priceImg}/>\n              <h2>Gold Plan</h2>\n              <ul style={planList}>\n                <li>Everything in the Bronze and Silver Plan</li>\n                <li>Ability to add up to 10 clusters</li>\n                <li>10 Users</li>\n                <li>Priority Integrations</li>\n              </ul>\n              <p><a className=\"btn btn-secondary\" href=\"/register\" role=\"button\" style={signUpButton}>Sign Up »</a></p>\n            </div>\n          </div>\n\n        </div>\n\n      </div>\n    )\n  };\n};\n\n// Export Link\nexport default Home;","// Import Links\nimport React from 'react';\n\n// Loading Screen Styling\nconst Loading = () => (\n  <div>\n    <i className=\"fa fa-spinner fa-spin\" /> Loading data...\n  </div>\n);\n\n// Export Link\nexport default Loading;","import React from \"react\"\nimport { Link } from \"react-router-dom\";\nimport moment from \"moment\";\nimport \"./Host.css\";\nimport { CircularProgressbar } from \"react-circular-progressbar\";\n\nconst HostCard = props => {\n  return (\n    <div>\n      <br></br>\n      {props.hostData.map((host, i) => (\n        <div key={host.esxhostname} className=\"host\">\n          <div className=\"title-row shadow mb-3 bg-white rounded\">\n            <p className=\"page-title\">Host: {host.esxhostname}</p>\n          </div>\n\n          <div className=\"row\">\n            <div className=\"col-md-2\">\n              <Link to={`/host/${host.esxhostname}`}>\n                <button className=\"btn-dark btn-sm link-button\">\n                  View Single Host Details\n                </button>\n              </Link>\n\n              <div className=\"card host-card\">\n                <div id=\"inner\" className=\"card-header\">\n                  Host Information:\n                </div>\n                <p className=\"bold-text host-text\">vCenter:</p>\n                <p className=\"host-text\">{host.vcenter}</p>\n                <p className=\"bold-text host-text\">Cluster:</p>\n                <p className=\"host-text\">{host.clustername}</p>\n              </div>\n            </div>\n\n            <div className=\"col-md-2\">\n              <div className=\"card host-card\">\n                <div id=\"inner\" className=\"card-header\">\n                  Memory Usage\n                </div>\n                <CircularProgressbar\n                  value={host.usage_average}\n                  text={\n                    <tspan className=\"progress\">{host.usage_average}%</tspan>\n                  }\n                  styles={{\n                    background: {\n                      fill: \"black\",\n                      transform: \"scale(0.8)\",\n                      transformOrigin: \"center center\"\n                    },\n                    path: {\n                      transform: \"rotate(180deg)\",\n                      transformOrigin: \"center center\",\n                      filter: \"drop-shadow(10px 10px 20px lightgray)\",\n                      strokeLinecap: \"butt\",\n                      stroke: host.usage_average >= 50 ? \"red\" : \"#2B4560\"\n                    },\n                    root: {\n                      filter: \"drop-shadow(10px 10px 20px lightgray)\"\n                    },\n                    trail: {\n                      strokeWidth: 8\n                    },\n                    text: {\n                      fontSize: 22,\n                      fontWeight: 800,\n                      filter: \"drop-shadow(10px 10px 20px lightgray)\",\n                      animation: \"fadein 2s\",\n                      fill: host.usage_average >= 50 ? \"red\" : \"#2B4560\"\n                    }\n                  }}\n                />\n              </div>\n            </div>\n\n            <div className=\"col-md-2\">\n              <div className=\"card host-card\">\n                <div id=\"inner\" className=\"card-header\">\n                  MEM Usage (GB)\n                </div>\n                <CircularProgressbar\n                  value={(\n                    (host.totalCapacity_average * host.usage_average) /\n                    100000\n                  ).toFixed(2)}\n                  text={\n                    <tspan className=\"progress\">\n                      {(\n                        (host.totalCapacity_average * host.usage_average) /\n                        100000\n                      ).toFixed(2)}\n                      GB\n                    </tspan>\n                  }\n                  styles={{\n                    background: {\n                      fill: \"black\",\n                      transform: \"scale(0.8)\",\n                      transformOrigin: \"center center\"\n                    },\n                    path: {\n                      transform: \"rotate(180deg)\",\n                      transformOrigin: \"center center\",\n                      filter: \"drop-shadow(10px 10px 20px lightgray)\",\n                      strokeLinecap: \"butt\",\n                      stroke:\n                        (host.totalCapacity_average * host.usage_average) /\n                          100000 >=\n                        25\n                          ? \"red\"\n                          : \"#2B4560\"\n                    },\n                    root: {\n                      filter: \"drop-shadow(10px 10px 20px lightgray)\"\n                    },\n                    trail: {\n                      strokeWidth: 8\n                    },\n                    text: {\n                      fontSize: 22,\n                      fontWeight: 800,\n                      filter: \"drop-shadow(10px 10px 20px lightgray)\",\n                      animation: \"fadein 2s\",\n                      fill:\n                        (host.totalCapacity_average * host.usage_average) /\n                          100000 >=\n                        25\n                          ? \"red\"\n                          : \"#2B4560\"\n                    }\n                  }}\n                />\n              </div>\n            </div>\n\n            <div className=\"col-md-2\">\n              <div className=\"card host-card\">\n                <div id=\"inner\" className=\"card-header\">\n                  CPU Usage\n                </div>\n                <CircularProgressbar\n                  value={host.cpu_usage_average}\n                  text={\n                    <tspan className=\"progress\">\n                      {host.cpu_usage_average}%\n                    </tspan>\n                  }\n                  styles={{\n                    background: {\n                      fill: \"black\",\n                      transform: \"scale(0.8)\",\n                      transformOrigin: \"center center\"\n                    },\n                    path: {\n                      transform: \"rotate(180deg)\",\n                      transformOrigin: \"center center\",\n                      strokeLinecap: \"butt\",\n                      stroke: host.cpu_usage_average >= 50 ? \"red\" : \"#2B4560\"\n                    },\n                    root: {\n                      filter: \"drop-shadow(10px 10px 20px lightgray)\"\n                    },\n                    trail: {\n                      strokeWidth: 8\n                    },\n                    text: {\n                      fontSize: 22,\n                      fontWeight: 800,\n                      filter: \"drop-shadow(10px 10px 20px lightgray)\",\n                      animation: \"fadein 5s\",\n                      fill: host.cpu_usage_average >= 50 ? \"red\" : \"#2B4560\"\n                    }\n                  }}\n                />\n              </div>\n            </div>\n\n            <div className=\"col-md-3\">\n              <div className=\"card host-card\">\n                <div id=\"inner\" className=\"card-header\">\n                  Host Performance Stats:\n                </div>\n                <div className=\"row\">\n                  <div className=\"col\">\n                    <p className=\"double-label\">CPU Ready</p>\n                    {((host.ready_summation / (20 * 1000)) * 100).toFixed(2) <\n                    5 ? (\n                      <div className=\"double normal\">\n                        <h4>\n                          {((host.ready_summation / (20 * 1000)) * 100).toFixed(\n                            2\n                          )}\n                          %\n                        </h4>\n                      </div>\n                    ) : (\n                      <div className=\"double warning \">\n                        <h4>\n                          {((host.ready_summation / (20 * 1000)) * 100).toFixed(\n                            2\n                          )}\n                          %\n                        </h4>\n                      </div>\n                    )}\n                  </div>\n                  <div className=\"col\">\n                    <p className=\"double-label\">CO-Stop (Sec)</p>\n                    {(host.costop_summation / 1000).toFixed(2) < 5 ? (\n                      <div className=\"double normal\">\n                        <h4>{(host.costop_summation / 1000).toFixed(2)}</h4>\n                      </div>\n                    ) : (\n                      <div className=\"double warning \">\n                        <h4>{(host.costop_summation / 1000).toFixed(2)}</h4>\n                      </div>\n                    )}\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <p className=\"polled\">\n            Device polled @ {moment(host.time).format(\"h:mm:ss a\")}\n          </p>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default HostCard;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport HostCard from \"../HostCardView/HostCard\";\n\nconst renderTableHeader = () => {\n  return (\n    <tr key=\"headers\">\n      <th>Host Name</th>\n      <th>Usage Average</th>\n      <th>Memory Usage (GB)</th>\n      <th>CPU Usage Average</th>\n    </tr>\n  );\n};\n\nconst renderTableData = props => {\n  return props.hostData.map((host, i) => {\n    return (\n      <tr key={host.esxhostname}>\n        <td>\n          {\" \"}\n          <Link to={`/host/${host.esxhostname}`}>\n            <button className=\"btn-dark btn host-button\">\n              {host.esxhostname}\n            </button>\n          </Link>\n        </td>\n        <td>{host.usage_average.toFixed(2)}</td>\n        <td>\n          {((host.totalCapacity_average * host.usage_average) / 100000).toFixed(\n            2\n          )}\n        </td>\n        <td>{host.cpu_usage_average.toFixed(2)}</td>\n      </tr>\n    );\n  });\n};\n\nconst HostList = props => {\n  return (\n    <div>\n      {props.view ? (\n        <>\n          <div className=\"toggle-switch\">\n          <p id=\"toggle-text\" >Detailed View &nbsp;&nbsp;\n            <label className=\"switch\">\n              <input type=\"checkbox\" onChange={props.cardHandler} />\n              <span className=\"slider round\"></span>\n            </label>\n            </p>\n          </div>\n\n          {/* <h1 id=\"title\">Host Info</h1> */}\n          <table id=\"hosts\">\n            <tbody>\n              {renderTableHeader()}\n              {renderTableData(props)}\n            </tbody>\n          </table>\n        </>\n      ) : (\n        <>\n          <div className=\"toggle-switch\">\n          <p id=\"toggle-text\">List View &nbsp;&nbsp;\n            <label className=\"switch\">\n              <input type=\"checkbox\" onChange={props.listHandler} checked />\n              <span className=\"slider round\"></span>\n            </label>\n            </p>\n          </div>\n\n          <HostCard hostData={props.hostData} />\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default HostList;\n\n// {props.view ? <div>\n//       <h1 id=\"title\">Host Info</h1>\n//          <table id=\"hosts\">\n//           <tbody>\n//              {renderTableHeader()}\n//             {renderTableData(props)}\n//            </tbody>\n//          </table>\n//     </div> : <HostCard hostData={props}/>\n//      }\n","// Import Links\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\n\nimport Loading from \"../../components/Loading/Loading\";\nimport \"./Hosts.css\";\nimport HostList from \"../../components/HostListView/HostList\";\n\n\n\nclass Hosts extends Component {\n  // State on Hosts\n  intervalID;\n  state = {\n    allData: [],\n    loading: true,\n    listView: false\n  };\n\n  componentDidMount() {\n    this.getBoth();\n  }\n\n  // Axios Call\n  getBoth = () => {\n    axios\n      .get(\"/api/host/cpu-mem/1\")\n      .then(allData => {\n        let obj = allData.data;\n        const array = Object.values(obj);\n        this.setState({ allData: array, loading: false });\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  \n  render() {\n    return (\n      <>\n        {this.state.loading ? (\n          <div className=\"loading\">\n            <Loading />\n          </div>\n        ) : (\n          <div className=\"wrapper\">\n            <div>\n              \n              <HostList hostData={this.state.allData} cardHandler={() => {\n                  this.setState({ listView: false });\n                }} view={this.state.listView} listHandler={() => {\n                  this.setState({ listView: true });\n                }}/>\n            </div>\n          </div>\n        )}\n      </>\n    );\n  }\n}\nexport default Hosts;\n\n","// Import Links\nimport React from \"react\";\nimport Chart from \"chart.js\";\n\nChart.defaults.global.defaultFontFamily = \"Roboto, sans-serif\";\n\nclass PieComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.chartRef = React.createRef();\n  }\n\n  componentDidUpdate() {\n    this.myChart = new Chart(this.chartRef.current, {\n      type: \"horizontalBar\",\n      data: {\n        labels: this.props.label,\n        datasets: [\n          {\n            data: this.props.data,\n            label: \"Points\",\n            backgroundColor: [\n              \"rgba(106, 164, 176, 1)\",\n              \"rgba(65, 103, 144, 1)\",\n              \"#2FDE00\"\n            ],\n            hoverBackgroundColor: [\n              \"RGBA(106, 164, 176, .5)\",\n              \"rgba(65, 103, 144, .5)\",\n              \"#175000\"\n            ]\n          }\n        ]\n      },\n      options: {\n        barPercentage: 0.4,\n        legend: { display: false },\n        title: {\n          display: true,\n          text: \"Cluster memory usage by host (%)\"\n        }\n      }\n    });\n  }\n\n  // Render Chart\n  render() {\n    return (\n      <canvas {...this.props} ref={this.chartRef} data={this.props.data} />\n    );\n  }\n}\n\n// Export Link\nexport default PieComponent;\n","// Import Links\nimport React from \"react\";\nimport Chart from \"chart.js\";\n\nChart.defaults.global.defaultFontFamily = \"Roboto, sans-serif\";\n\nclass ClusterLineChart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.chartRef = React.createRef();\n  }\n\n  componentDidUpdate() {\n    this.myChart = new Chart(this.chartRef.current, {\n      type: \"line\",\n      options: {\n        maintainAspectRatio: true,\n        scales: {\n          xAxes: [\n            {\n              id: \"bottom-x-axis\",\n              type: \"category\",\n              position: \"bottom\"\n            },\n            {\n              id: \"bottom-x-axis\",\n              type: \"category\",\n              position: \"bottom\"\n            }\n          ] // yAxes: [ //   { //     ticks: { //       min: 200000, //       stepSize: 10000 //     } //   } // ]\n        }\n      },\n      data: {\n        labels: this.props.time,\n        datasets: [\n          {\n            data: this.props.hostOneData,\n            label: this.props.hostOneLabels,\n            backgroundColor: \"RGBA(43, 68, 95, 0.50)\", // This binds the dataset to the left y axis           \n            xAxisID: \"bottom-x-axis\"\n          },\n          {\n            data: this.props.hostTwoData,\n            label: this.props.hostTwoLabels,\n            backgroundColor: \"RGBA(106, 164, 176, 0.50)\", // This binds the dataset to the right y axis\n            xAxisID: \"bottom-x-axis\"\n          }\n        ]\n      }\n    });\n  }\n\n  // Render Chart\n  render() {\n    return <canvas ref={this.chartRef} />;\n  }\n}\n\n// Export Link\nexport default ClusterLineChart;","// Import Links\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport ClusterLineChart from \"../LineChart/ClusterLineChart\";\n\nclass ClusterChartContainer extends Component {\n  // State on ClusterChartContainer\n  intervalID;\n  state = {\n    hostOneCpuData: [],\n    hostOneMemData: [],\n    hostOneLabels: [],\n    hostTwoCpuData: [],\n    hostTwoMemData: [],\n    hostTwoLabels: [],\n    time: []\n  };\n\n  componentDidMount() {\n    this.getMem();\n    this.getCpu();\n  }\n\n  getMem = () => {\n    axios\n      .get(\"/api/host/mem/1day\")\n      .then(hostMemData => {\n         const {\n            memUsageOne,\n            memUsageTwo,\n          } = hostMemData.data.data;\n                  this.setState({\n                    hostOneMemData: memUsageOne,\n                    hostTwoMemData: memUsageTwo,\n                  });\n          this.intervalID = setTimeout(this.getMem.bind(this), 30000);\n        })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  getCpu = () => {\n    axios\n      .get(\"/api/host/cpu/1day\")\n      .then(hostCpuData => {\n        const {\n          cpuUsageOne,\n          cpuUsageTwo,\n          hostName,\n          time\n        } = hostCpuData.data.data;\n        let hostNameOne = hostName.filter(data => data === \"lab-esxi-01.vdilab.int\");\n        let hostNameTwo = hostName.filter(data => data === \"lab-esxi-02.vdilab.int\");\n        let formattedTime = time.map(time => moment(time).format(\"M/D, ha\"));\n                this.setState({\n                  hostOneCpuData: cpuUsageOne,\n                  hostOneLabels: hostNameOne,\n                  hostTwoCpuData: cpuUsageTwo,\n                  hostTwoLabels: hostNameTwo,\n                  time:formattedTime\n                });\n        this.intervalID = setTimeout(this.getCpu.bind(this), 30000);\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  // Styling ClusterChartContainer Component with Bootstrap classNames\n  render() {\n    return (\n      <>\n        <div className=\"main chart-wrapper container\">\n          <ClusterLineChart\n            label={\"Host MEM Usage Average\"}\n            hostOneData={this.state.hostOneMemData}\n            hostTwoData={this.state.hostTwoMemData}\n            hostOneLabels={this.state.hostOneLabels[0] + \" MEM Usage Average\"}\n            hostTwoLabels={this.state.hostTwoLabels[0] + \" MEM Usage Average\"}\n            time={this.state.time}\n            color=\"#3E517A\"\n          />\n        <div className=\"main chart-wrapper container\">\n                    \n          <ClusterLineChart\n            label={\"Host CPU Usage Average\"}\n            hostOneData={this.state.hostOneCpuData}\n            hostTwoData={this.state.hostTwoCpuData}\n            hostOneLabels={this.state.hostOneLabels[0] + \" CPU Usage Average\"}\n            hostTwoLabels={this.state.hostTwoLabels[0] + \" CPU Usage Average\"}\n            time={this.state.time}\n            color=\"#3E517A\"\n          />\n                  \n        </div>              \n        </div>\n              \n      </>\n    );\n  }\n}\n\n// Export Links\nexport default ClusterChartContainer;","// Import Links\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport PieComponent from \"../..//components/Pie/Pie\";\nimport Loading from \"../../components/Loading/Loading\";\nimport ClusterChartContainer from \"../../components/ClusterChart/ClusterChartContainer\";\nimport { CircularProgressbar } from \"react-circular-progressbar\";\nimport \"react-circular-progressbar/dist/styles.css\";\nimport \"./Clusters.css\";\n\nclass Clusters extends Component {\n  // State on Cluester Component\n  intervalID;\n\n  state = {\n    alldata: [],\n    loading: true,\n    totalmemoryusage: [],\n    label: [],\n    data: [],\n    singlevcentername: [],\n    singleclustername: [],\n    showhostchart: undefined,\n    n1cpu: \"\",\n    n1mem: \"\"\n  };\n\n  componentDidMount() {\n    this.getBoth();\n  }\n\n  // Axios Call\n\n  nPLus = () => {\n    console.log(this.state.n1mem);\n    console.log(this.state.n1cpu);\n    axios\n      .post(\"/api/cluster/nPlus\", this.state)\n      .then(response => {\n        console.log(response);\n        // if(response.data.error){\n        //   alert(\"Failed to create\" + response.data.message);\n        // }else{\n        //   // this.props.history.push('/collection/' + response.data.data._id);\n        // } \n      })\n      .catch(err => {\n        console.log(err);\n        // alert(\"Failed to create: \" + err.message);\n      });\n  };\n\n  getBoth = () => {\n    axios\n      .get(\"/api/host/cpu-mem/1\")\n      .then(alldata => {\n        let obj = alldata.data;\n        const array = Object.values(obj);\n        this.setState({ alldata: array, loading: undefined });\n        let combined = [];\n\n        for (let i = 0; i < this.state.alldata.length; i++) {\n          combined.push(this.state.alldata[i].usage_average);\n        }\n\n        const memData = this.state.alldata.map(data => data.usage_average);\n        let memTotal = 0;\n        //Add the to values together to make the total\n        for (let i = 0; i < memData.length; i++) {\n          memTotal += memData[i];\n        }\n        const cpuData = this.state.alldata.map(data => data.cpu_usage_average);\n        let cputotal = 0;\n        //Add the to values together to make the total\n        for (let e = 0; e < cpuData.length; e++) {\n          cputotal += cpuData[e];\n        }\n        const cpuReady = this.state.alldata.map(data => data.ready_summation);\n        let readyTotal = 0;\n        //Add the to values together to make the total\n        for (let f = 0; f < cpuReady.length; f++) {\n          readyTotal += cpuReady[f];\n        }\n        let cpureadytotal = ((readyTotal / (20 * 1000)) * 100).toFixed(2);\n\n        const costopData = this.state.alldata.map(\n          data => data.cpu_usage_average\n        );\n        let cototal = 0;\n\n        //Add the to values together to make the total\n        for (let e = 0; e < costopData.length; e++) {\n          cototal += costopData[e];\n        }\n        let costoptotal = (cototal / 1000).toFixed(2);\n        const labelData = this.state.alldata.map(data => data.esxhostname);\n        const clusterName = this.state.alldata.map(data => data.clustername);\n        const singleclustername = [...new Set(clusterName)];\n        const vcenterName = this.state.alldata.map(data => data.vcenter);\n        const singlevcentername = [...new Set(vcenterName)];\n\n        let hostmemory = 28383;\n        let totalclustermemory = (hostmemory * memTotal) / 100000;\n        let n1mem = ((64 - totalclustermemory) / 32).toFixed(2);\n\n        const cpuUsage = this.state.alldata.map(data => data.usagemhz_average);\n        let clusterCpuTotal = 0;\n        //Add the to values together to make the total\n        for (let f = 0; f < cpuUsage.length; f++) {\n          clusterCpuTotal += cpuUsage[f];\n        }\n\n        const cpuUsagePer = this.state.alldata.map(\n          data => data.cpu_usage_average\n        );\n        let clusterusagetotal = 0;\n        //Add the to values together to make the total\n        for (let g = 0; g < cpuUsagePer.length; g++) {\n          clusterusagetotal += cpuUsagePer[g];\n        }\n\n        let hostcpu = 17.552;\n        let totalcpu = 35.104;\n\n        let totalclustercpu = (\n          (totalcpu - clusterCpuTotal / 1000) /\n          hostcpu\n        ).toFixed(2);\n        let n1cpu = totalclustercpu;\n          \n        //Set state\n        this.setState({\n          clusterusagetotal: clusterusagetotal.toFixed(2),\n          clustercputotal: clusterCpuTotal,\n          n1cpu: n1cpu,\n          totalclustermemory: totalclustermemory,\n          n1mem: n1mem,\n          cputotal: cputotal,\n          totalmemoryusage: memTotal.toFixed(2),\n          label: labelData,\n          data: memData,\n          singleclustername: singleclustername,\n          singlevcentername: singlevcentername,\n          cpureadytotal: cpureadytotal,\n          costoptotal: costoptotal\n        });\n        \n        console.log(this.state.n1cpu);\n        console.log(this.state.n1mem);\n        this.nPLus()\n        this.intervalID = setTimeout(this.getBoth.bind(this), 30000);\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n  render() {\n    // Loading Screen Logic\n    let content;\n    if (this.state.loading) {\n      content = (\n        <div className=\"loading\">\n          <Loading />\n        </div>\n      );\n    } else {\n      // Styling Clusters Component with Bootstrap classNames\n      return (\n        <div id=\"wrapper\" className=\"wrapper\">\n          <div className=\"title-row shadow mb-3 bg-white rounded\">\n            <p className=\"page-title\">\n              Cluster: {this.state.singleclustername}\n            </p>\n          </div>\n\n          <div className=\"row\">\n            <div className=\"col-md-2\">\n              <Link to=\"/hosts\">\n                <button className=\"btn-dark btn-sm link-button\">\n                  Click to view \"Hosts\"\n                </button>\n              </Link>\n              {this.state.showhostchart ? (\n                <></>\n              ) : (\n                <button\n                  className=\"btn-dark btn-sm link-button\"\n                  onClick={() => {\n                    this.setState({ showhostchart: \"true\" });\n                  }}\n                >\n                  View Host CPU and MEM Usage\n                </button>\n              )}\n\n              <div className=\"card host-card\">\n                <div id=\"inner\" className=\"card-header\">\n                  Cluster Information\n                </div>\n                <p className=\"bold-text host-text\">vCenter:</p>\n                <p className=\"host-text\">{this.state.singlevcentername}</p>\n              </div>\n            </div>\n\n            <div className=\"col-md-2\">\n              <div className=\"card single-card\">\n                <div id=\"inner\" className=\"card-header\">\n                  Memory Usage\n                </div>\n                <CircularProgressbar\n                  value={this.state.totalmemoryusage}\n                  text={\n                    <tspan className=\"progress\">\n                      {this.state.totalmemoryusage}%\n                    </tspan>\n                  }\n                  styles={{\n                    background: {\n                      fill: \"black\",\n                      transform: \"scale(0.8)\",\n                      transformOrigin: \"center center\"\n                    },\n                    path: {\n                      transform: \"rotate(180deg)\",\n                      transformOrigin: \"center center\",\n                      filter: \"drop-shadow(10px 10px 20px lightgray)\",\n                      strokeLinecap: \"butt\",\n                      stroke:\n                        this.state.totalmemoryusage >= 50 ? \"red\" : \"#2B4560\"\n                    },\n                    root: {\n                      filter: \"drop-shadow(10px 10px 20px lightgray)\"\n                    },\n                    trail: {\n                      strokeWidth: 8\n                    },\n                    text: {\n                      fontSize: 22,\n                      fontWeight: 800,\n                      filter: \"drop-shadow(10px 10px 20px lightgray)\",\n                      animation: \"fadein 2s\",\n                      fill:\n                        this.state.totalmemoryusage >= 50 ? \"red\" : \"#2B4560\"\n                    }\n                  }}\n                />\n              </div>\n            </div>\n\n            <div className=\"col-md-2\">\n              <div className=\"card single-card\">\n                <div id=\"inner\" className=\"card-header\">\n                  CPU Usage\n                </div>\n                <CircularProgressbar\n                  value={this.state.clusterusagetotal}\n                  text={\n                    <tspan className=\"progress\">\n                      {this.state.clusterusagetotal}%\n                    </tspan>\n                  }\n                  styles={{\n                    background: {\n                      fill: \"black\",\n                      transform: \"scale(0.8)\",\n                      transformOrigin: \"center center\"\n                    },\n                    path: {\n                      transform: \"rotate(180deg)\",\n                      transformOrigin: \"center center\",\n                      strokeLinecap: \"butt\",\n                      stroke:\n                        this.state.clusterusagetotal >= 70 ? \"red\" : \"#2B4560\"\n                    },\n                    root: {\n                      filter: \"drop-shadow(10px 10px 20px lightgray)\"\n                    },\n                    trail: {\n                      strokeWidth: 8\n                    },\n                    text: {\n                      fontSize: 22,\n                      fontWeight: 800,\n                      filter: \"drop-shadow(10px 10px 20px lightgray)\",\n                      animation: \"fadein 5s\",\n                      fill:\n                        this.state.clusterusagetotal >= 70 ? \"red\" : \"#2B4560\"\n                    }\n                  }}\n                />\n              </div>\n            </div>\n\n            <div className=\"col-md-2\">\n              <div className=\"card single-card\">\n                <div id=\"inner\" className=\"card-header\">\n                  ESXi Hosts\n                </div>\n                <div className=\"normal\">\n                  <h4>{this.state.label.length}</h4>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"col-md-4\">\n              <div className=\"card double-card\">\n                <PieComponent {...this.state} />\n              </div>\n            </div>\n          </div>\n\n          <div className=\"row\">\n            <div className=\"col-md-2\">\n              <div\n                className=\"card single-card\"\n                id=\"nPlusMEM\"\n                value={this.state.n1mem}\n              >\n                <div id=\"inner\" className=\"card-header\">\n                  N+1 MEM\n                </div>\n                {this.state.n1mem > 1 ? (\n                  <div className=\"normal\">\n                    <h4>{this.state.n1mem}</h4>\n                  </div>\n                ) : (\n                  <div className=\"warning\">\n                    <h4>{this.state.n1mem}</h4>\n                  </div>\n                )}\n              </div>\n            </div>\n\n            <div className=\"col-md-2\">\n              <div\n                className=\"card single-card\"\n                id=\"nPlusCPU\"\n                value={this.state.n1cpu}\n              >\n                <div id=\"inner\" className=\"card-header\">\n                  N+1 CPU\n                </div>\n                {this.state.n1cpu > 1 ? (\n                  <div className=\"normal\">\n                    <h4>{this.state.n1cpu}</h4>\n                  </div>\n                ) : (\n                  <div className=\"warning\">\n                    <h4>{this.state.n1cpu}</h4>\n                  </div>\n                )}\n              </div>\n            </div>\n\n            <div className=\"col-md-3\">\n              <div className=\"card double-card\">\n                <div id=\"inner\" className=\"card-header\">\n                  CPU Performance\n                </div>\n                <div className=\"row\">\n                  <div className=\"col\">\n                    <p className=\"double-label\">CPU Ready</p>\n                    {this.state.cpureadytotal < 5 ? (\n                      <div className=\"double normal\">\n                        <h4>{this.state.cpureadytotal}%</h4>\n                      </div>\n                    ) : (\n                      <div className=\"double warning \">\n                        <h4>{this.state.cpureadytotal}%</h4>\n                      </div>\n                    )}\n                  </div>\n                  <div className=\"col\">\n                    <p className=\"double-label\">CO-Stop (Sec)</p>\n                    {this.state.costoptotal < 5 ? (\n                      <div className=\"double normal\">\n                        <h4>{this.state.costoptotal}</h4>\n                      </div>\n                    ) : (\n                      <div className=\"double warning \">\n                        <h4>{this.state.costoptotal}%</h4>\n                      </div>\n                    )}\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          {this.state.showhostchart ? (\n            <div className=\"card host-card chart\">\n              <button\n                type=\"button\"\n                className=\"btn btn-dark\"\n                onClick={() => {\n                  this.setState({ showhostchart: undefined });\n                }}\n              >\n                Hide Host Mem and CPU Usage\n              </button>\n              <ClusterChartContainer />\n            </div>\n          ) : (\n            <></>\n          )}\n        </div>\n      );\n    }\n    return <div>{content}</div>;\n  }\n}\n\n// Export Link\nexport default Clusters;\n","// Import Link\nimport React from 'react';\nimport Chart from 'chart.js';\n\nChart.defaults.global.defaultFontFamily = \"Roboto, sans-serif\";\n\nclass LineChart extends React.Component {\n    constructor(props) {\n      super(props);\n      this.chartRef = React.createRef();\n    }\n\n    componentDidUpdate() {\n      this.myChart = new Chart(this.chartRef.current, {\n        type: 'line',\n        options: {\n            maintainAspectRatio: true,\n          scales: {\n            xAxes: [\n              {\n                type: 'category',\n                label: this.props.hostLabels\n              }\n            ],\n            yAxes: [\n              {\n                ticks: {\n                  min: 0\n                }\n              }\n            ]\n          }\n        },\n        data: {\n          labels: this.props.time,\n          datasets: [{\n            label: this.props.hostLabels,\n            data: this.props.hostData,\n            backgroundColor: this.props.color,\n            pointRadius: 2,\n            borderColor: this.props.color,\n            borderWidth: 1,\n            lineTension: 0\n          }]\n        }\n      });\n      \n    }\n\n    // Render Chart\n    render() {\n      return <canvas ref={this.chartRef} />;\n    }\n  }\n\n  // Export Link\nexport default LineChart;","// Import Links\nimport React from 'react';\nimport Chart from 'chart.js';\n\nChart.defaults.global.defaultFontFamily = \"Roboto, sans-serif\";\n\nclass LineChart extends React.Component {\n    constructor(props) {\n      super(props);\n      this.chartRef = React.createRef();\n    }\n\n    componentDidUpdate() {\n      this.myChart = new Chart(this.chartRef.current, {\n        type: 'line',\n        options: {\n            maintainAspectRatio: true,\n          scales: {\n            xAxes: [\n              {\n                type: 'category',\n                label: this.props.hostLabels\n              }\n            ],\n            yAxes: [\n              {\n                ticks: {\n                  min: 0\n                }\n              }\n            ]\n          }\n        },\n        data: {\n          labels: this.props.time,\n          datasets: [{\n            label: this.props.hostLabels,\n            data: this.props.hostData,\n            backgroundColor: this.props.color,\n            pointRadius: 2,\n            borderColor: this.props.color,\n            borderWidth: 1,\n            lineTension: 0\n          }]\n        }\n      });\n    }\n\n    // Render Chart\n    render() {\n      return <canvas ref={this.chartRef} />;\n    }\n  }\n\n  // Export Link\nexport default LineChart;","// Import Links\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport LineMemChart from \"../LineChart/LineMemChart\";\nimport LineCpuChart from \"../LineChart/LineCpuChart\"\n\nclass HostChartContainer extends Component {\n  // State on HostChartContainer\n  intervalID;\n  state = {\n    hostMemData: [],\n    hostLabels: \"\",\n    hostCpuLabels: \"\",\n    hostCPUData: [],\n    time: []\n  };\n\n  componentDidMount() {\n    this.getSevenDayMem();\n    this.getSevenDayCpu();\n  }\n\n  getSevenDayMem = (props) => {\n    axios\n      .get(\"/api/host/mem/7days/\" + this.props.hostName)\n      .then(hostMemData => {\n        const { time, hostData} = hostMemData.data.data\n        let formattedTime = time.map(time => moment(time).format(\"M/D, ha\"));\n        this.setState({\n          hostData: hostData,\n          hostLabels: this.props.hostName + \" MEM utilization\",\n          time: formattedTime\n        });\n        this.intervalID = setTimeout(this.getSevenDayMem.bind(this), 30000);\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  getSevenDayCpu = (props) => {\n    axios\n      .get(\"/api/host/cpu/7days/\" + this.props.hostName)\n      .then(hostCPUData => {\n        const {hostCpuData} = hostCPUData.data.data\n        this.setState({\n          hostCpuData: hostCpuData,\n          hostCpuLabels: this.props.hostName + \" CPU utilization\",\n        });\n        this.intervalID = setTimeout(this.getSevenDayCpu.bind(this), 30000);\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  // Styling HostChartContainer Component with Bootstrap classNames\n  render() {\n    return (\n      <>\n        <div className=\"main chart-wrapper container\">\n          <LineMemChart\n            label={\"Host MEM Usage Average\"}\n            hostData={this.state.hostData}\n            hostLabels={this.state.hostLabels}\n            time={this.state.time}\n            color=\"rgba(106, 164, 176, .68)\"\n          />\n        </div>\n        <div className=\"main chart-wrapper container\">\n          <LineCpuChart\n            label={\"Host MEM Usage Average\"}\n            hostData={this.state.hostCpuData}\n            hostLabels={this.state.hostCpuLabels}\n            time={this.state.time}\n            color=\"rgba(65, 103, 144, .68)\"\n          />\n        </div>\n      </>\n    );\n  }\n}\n\n// Export Link\nexport default HostChartContainer;","// Import Links\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport moment from \"moment\";\nimport Loading from \"../../components/Loading/Loading\";\nimport Collection from \"../../components/HostChart/HostChartContainer\";\nimport { CircularProgressbar } from \"react-circular-progressbar\";\n\n\nclass Host extends Component {\n  // Start on Host Component\n  intervalID;\n  state = {\n    allData: [],\n    loading: true\n  };\n\n  componentDidMount() {\n    this.getBoth();\n  }\n\n\n  // Axios Call\n  getBoth = () => {\n    axios\n      .get(\"/api/host/cpu-mem/1/\" + this.props.match.params.esxhostname)\n      .then(allData => {\n        let obj = allData.data;\n        const array = Object.values(obj);\n        this.setState({ allData: array, loading: false });\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  render() {\n    // Loading Screen Logic\n    let content;\n    if (this.state.loading) {\n      content = (\n        <div className=\"loading\">\n          <Loading />\n        </div>\n      );\n    } else {\n      // Styling Host Component with Bootstrap classNames\n      return (\n        <div className=\"wrapper\">\n          {this.state.allData.map((host, i) => (\n            <div key={host.esxhostname}className=\"host\">\n              <div className=\"title-row shadow mb-3 bg-white rounded\">\n                <p className=\"page-title\">Host: {host.esxhostname}</p>\n              </div>\n\n              <div className=\"row\">\n                <div className=\"col-md-2\">\n                  <Link to=\"/hosts\">\n                    <button className=\"btn-dark btn-sm link-button\">\n                      Back to \"Hosts\"\n                    </button>\n                  </Link>\n\n                  <div className=\"card host-card\">\n                    <div id=\"inner\" className=\"card-header\">\n                      Host Information:\n                    </div>\n                    <p className=\"bold-text host-text\">vCenter:</p>\n                    <p className=\"host-text\">{host.vcenter}</p>\n                    <p className=\"bold-text host-text\">Cluster:</p>\n                    <p className=\"host-text\">{host.clustername}</p>\n                  </div>\n                </div>\n                <div className=\"col-md-2\">\n                  <div className=\"card host-card\">\n                    <div id=\"inner\" className=\"card-header\">\n                      Memory Usage\n                    </div>\n                    <CircularProgressbar\n                      value={host.usage_average}\n                      text={\n                        <tspan className=\"progress\">\n                          {host.usage_average}%\n                        </tspan>\n                      }\n                      styles={{\n                        background: {\n                          fill: \"black\",\n                          transform: \"scale(0.8)\",\n                          transformOrigin: \"center center\"\n                        },\n                        path: {\n                          transform: \"rotate(180deg)\",\n                          transformOrigin: \"center center\",\n                          filter: \"drop-shadow(10px 10px 20px lightgray)\",\n                          strokeLinecap: \"butt\",\n                          stroke: host.usage_average >= 50 ? \"red\" : \"#2B4560\"\n                        },\n                        root: {\n                          filter: \"drop-shadow(10px 10px 20px lightgray)\"\n                        },\n                        trail: {\n                          strokeWidth: 8\n                        },\n                        text: {\n                          fontSize: 22,\n                          fontWeight: 800,\n                          filter: \"drop-shadow(10px 10px 20px lightgray)\",\n                          animation: \"fadein 2s\",\n                          fill: host.usage_average >= 50 ? \"red\" : \"#2B4560\"\n                        }\n                      }}\n                    />\n                  </div>\n                </div>\n                <div className=\"col-md-2\">\n                  <div className=\"card host-card\">\n                    <div id=\"inner\" className=\"card-header\">\n                      MEM Usage (GB)\n                    </div>\n                    <CircularProgressbar\n                      value={(\n                        (host.totalCapacity_average * host.usage_average) /\n                        100000\n                      ).toFixed(2)}\n                      text={\n                        <tspan className=\"progress\">\n                          {(\n                            (host.totalCapacity_average * host.usage_average) /\n                            100000\n                          ).toFixed(2)}\n                          GB\n                        </tspan>\n                      }\n                      styles={{\n                        background: {\n                          fill: \"black\",\n                          transform: \"scale(0.8)\",\n                          transformOrigin: \"center center\"\n                        },\n                        path: {\n                          transform: \"rotate(180deg)\",\n                          transformOrigin: \"center center\",\n                          filter: \"drop-shadow(10px 10px 20px lightgray)\",\n                          strokeLinecap: \"butt\",\n                          stroke:\n                            (host.totalCapacity_average * host.usage_average) /\n                              100000 >=\n                            25\n                              ? \"red\"\n                              : \"#2B4560\"\n                        },\n                        root: {\n                          filter: \"drop-shadow(10px 10px 20px lightgray)\"\n                        },\n                        trail: {\n                          strokeWidth: 8\n                        },\n                        text: {\n                          fontSize: 22,\n                          fontWeight: 800,\n                          filter: \"drop-shadow(10px 10px 20px lightgray)\",\n                          animation: \"fadein 2s\",\n                          fill:\n                            (host.totalCapacity_average * host.usage_average) /\n                              100000 >=\n                            25\n                              ? \"red\"\n                              : \"#2B4560\"\n                        }\n                      }}\n                    />\n                  </div>\n                </div>\n\n                <div className=\"col-md-2\">\n                  <div className=\"card host-card\">\n                    <div id=\"inner\" className=\"card-header\">\n                      CPU Usage\n                    </div>\n                    <CircularProgressbar\n                      value={host.cpu_usage_average}\n                      text={\n                        <tspan className=\"progress\">\n                          {host.cpu_usage_average}%\n                        </tspan>\n                      }\n                      styles={{\n                        background: {\n                          fill: \"black\",\n                          transform: \"scale(0.8)\",\n                          transformOrigin: \"center center\"\n                        },\n                        path: {\n                          transform: \"rotate(180deg)\",\n                          transformOrigin: \"center center\",\n                          strokeLinecap: \"butt\",\n                          stroke:\n                            host.cpu_usage_average >= 50 ? \"red\" : \"#2B4560\"\n                        },\n                        root: {\n                          filter: \"drop-shadow(10px 10px 20px lightgray)\"\n                        },\n                        trail: {\n                          strokeWidth: 8\n                        },\n                        text: {\n                          fontSize: 22,\n                          fontWeight: 800,\n                          filter: \"drop-shadow(10px 10px 20px lightgray)\",\n                          animation: \"fadein 5s\",\n                          fill: host.cpu_usage_average >= 50 ? \"red\" : \"#2B4560\"\n                        }\n                      }}\n                    />\n                  </div>\n                </div>\n\n                <div className=\"col-md-3\">\n                  <div className=\"card host-card\">\n                    <div id=\"inner\" className=\"card-header\">\n                      Host Performance Stats:\n                    </div>\n                    <div className=\"row\">\n                      <div className=\"col\">\n                        <p className=\"double-label\">CPU Ready</p>\n                        {((host.ready_summation  / (20 * 1000)) * 100).toFixed(2) < 5 ? (\n                          <div className=\"double normal\">\n                            <h4>{((host.ready_summation  / (20 * 1000)) * 100).toFixed(2)}%</h4>\n                          </div>\n                        ) : (\n                          <div className=\"double warning \">\n                            <h4>{((host.ready_summation  / (20 * 1000)) * 100).toFixed(2)}%</h4>\n                          </div>\n                        )}\n                      </div>\n                      <div className=\"col\">\n                        <p className=\"double-label\">CO-Stop (Sec)</p>\n                        {(host.costop_summation / 1000).toFixed(2) < 5 ? (\n                          <div className=\"double normal\">\n                            <h4>{(host.costop_summation / 1000).toFixed(2) }</h4>\n                          </div>\n                        ) : (\n                          <div className=\"double warning \">\n                            <h4>{(host.costop_summation / 1000).toFixed(2) }</h4>\n                          </div>\n                        )}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <p className=\"polled\">\n                Device polled @ {moment(host.time).format(\"h:mm:ss a\")}\n              </p>\n              <div className=\"card host-card chart\">\n                <Collection hostName={this.props.match.params.esxhostname} />\n              </div>\n            </div>\n          ))}\n        </div>\n      );\n    }\n    return <div>{content}</div>;\n  }\n}\nexport default Host;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\n\n\nclass NewConfig extends Component {\n  state = {\n    clusterName: \"\",\n    hostMem: \"\"\n  };\n \n  handleChange = event => {\n    let value = event.target.value;\n    let name = event.target.name;\n\n    this.setState({\n      [name]: value\n    });\n  };\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n    console.log(this.state);\n    axios\n      .post(\"/api/config\", this.state)\n      .then(response => {\n        console.log(response);\n        if(response.data.error){\n          alert(\"Failed to create\" + response.data.message);\n        }else{\n          // this.props.history.push('/collection/' + response.data.data._id);\n        } \n      })\n      .catch(err => {\n        console.log(err);\n        alert(\"Failed to create: \" + err.message);\n      });\n  };\n\n  render() {\n    return (\n      <div className=\"auth-container\">\n      <div className=\"card\">\n      <div>\n        <h1>Welcome to the Admin page</h1>\n        <form>\n          <div className=\"form-group\">\n          <label htmlFor=\"clusterName\">Enter the cluster name as listed in vCenter  &nbsp;</label>\n            <input\n              type=\"text\"\n              placeholder=\"clusterName\"\n              onChange={this.handleChange}\n              name=\"clusterName\"\n              value={this.state.clusterName}\n            />\n          </div>\n          <div className=\"form-group\">\n          <label htmlFor=\"hostMem\">Enter total amount of physical RAM per host  &nbsp;</label>\n            <input\n              type=\"number\"\n              placeholder=\"hostMem\"\n              onChange={this.handleChange}\n              name=\"hostMem\"\n              value={this.state.hostMem}\n            />\n          </div>\n       \n          <div className=\"form-group\">\n            <button\n              type=\"submit\"\n              className=\"btn btn-dark\"\n              onClick={this.handleFormSubmit}\n            >\n              Submit\n            </button>\n          </div>\n        </form>\n      </div>\n      </div>\n      </div>\n    );\n  }\n}\n\nexport default NewConfig;\n","import { SET_ALERT, REMOVE_ALERT } from '../actions/types';\n\nconst initialState = [];\n\nexport default function(state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case SET_ALERT:\n      return [...state, payload];\n    case REMOVE_ALERT:\n      return state.filter(alert => alert.id !== payload);\n    default:\n      return state;\n  }\n}\n","import {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  USER_LOADED,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n  ACCOUNT_DELETED\n} from '../actions/types';\n\nconst initialState = {\n  token: localStorage.getItem('token'),\n  isAuthenticated: null,\n  loading: true,\n  user: null\n};\n\nexport default function(state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case USER_LOADED:\n      return {\n        ...state,\n        isAuthenticated: true,\n        loading: false,\n        user: payload\n      };\n    case REGISTER_SUCCESS:\n    case LOGIN_SUCCESS:\n      localStorage.setItem('token', payload.token);\n      return {\n        ...state,\n        ...payload,\n        isAuthenticated: true,\n        loading: false\n      };\n    case REGISTER_FAIL:\n    case AUTH_ERROR:\n    case LOGIN_FAIL:\n    case LOGOUT:\n    case ACCOUNT_DELETED:\n      localStorage.removeItem('token');\n      return {\n        ...state,\n        token: null,\n        isAuthenticated: false,\n        loading: false\n      };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport alert from './alert';\nimport auth from './auth';\n\nexport default combineReducers({\n  alert,\n  auth\n});\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;","// Import React Links\nimport React, { useEffect } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\n// Import Components\nimport Navbar from \"./components/Nav/Navbar\";\nimport Routes from \"./components/routing/Routes\";\nimport Sidebar from \"./components/Sidebar/Sidebar\";\nimport PrivateRoute from \"./components/routing/PrivateRoute\";\n\n// Import Containers\nimport Home from \"./containers/Home/Home\";\nimport Hosts from \"./containers/Hosts/Hosts\";\nimport Clusters from \"./containers/Clusters/Clusters\";\nimport Host from \"./containers/Host/Host\";\nimport NewConfig from \"./containers/NewConfig/NewConfig\"\n\n// Redux\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport { loadUser } from \"./actions/auth\";\nimport setAuthToken from \"./utils/setAuthToken\";\n\n// Import Style Sheet\nimport \"./App.css\";\n\nif (localStorage.token) {\n  setAuthToken(localStorage.token);\n}\n\nconst App = () => {\n  useEffect(() => {\n    store.dispatch(loadUser());\n  }, []);\n\n  return (\n    <Provider store={store}>\n      <Router>\n        <Switch>\n          <Route\n            exact\n            path=\"/\"\n            component={props => (\n              <div className=\"nav-style\">\n                <Navbar />\n                <Home {...props} />\n              </div>\n            )}\n          />\n\n          <PrivateRoute\n            exact\n            path=\"/config\"\n            component={props => (\n              <div className=\"page-wrap\">\n                <Navbar />\n                <Sidebar />\n                <NewConfig />\n              </div>\n            )}\n          />\n          <PrivateRoute\n            exact\n            path=\"/host/:esxhostname\"\n            component={props => (\n              <div className=\"page-wrap\">\n                <Navbar />\n                <Sidebar />\n                <Host {...props} />\n              </div>\n            )}\n          />\n\n          <PrivateRoute\n            exact\n            path=\"/hosts\"\n            component={props => (\n              <div className=\"page-wrap\">\n                <Navbar />\n                <Sidebar />\n                <Hosts {...props} />\n              </div>\n            )}\n          />\n\n          <PrivateRoute\n            exact\n            path=\"/clusters\"\n            component={props => (\n              <div className=\"page-wrap\">\n                <Navbar />\n                <Sidebar />\n                <Clusters {...props} />\n              </div>\n            )}\n          />\n\n          <Route\n            component={props => (\n              <div>\n                <Navbar />\n                <Routes {...props} />\n              </div>\n            )}\n          />\n        </Switch>\n      </Router>\n    </Provider>\n  );\n};\n\n// Export Link\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}